#!/bin/bash

# -----------------------------------------------------------------------------
# Configuration for AI Feature Implementation Script
# -----------------------------------------------------------------------------
# Copy this file to 'config.sh' in the same directory and customize the values.
# IMPORTANT: Add 'auto_feature_tool/config.sh' to your project's .gitignore file
# if it's not already covered by a more general pattern.
# -----------------------------------------------------------------------------

# --- OpenRouter API Configuration ---
# Your OpenRouter API Key. Get one from https://openrouter.ai
export OPENROUTER_API_KEY="YOUR_OPENROUTER_API_KEY_HERE"

# Model to use for generating implementation guides (via OpenRouter)
# Example: "google/gemini-1.5-pro-latest", "openai/gpt-4o", "anthropic/claude-3-opus"
# The user's request specified "gemini 2.5 pro". Ensure this model identifier is correct on OpenRouter.
export GEMINI_MODEL="google/gemini-2.5-pro" # Verify this model string on OpenRouter

# Optional headers for OpenRouter API calls (helps your app appear on leaderboards)
export OPENROUTER_SITE_URL="<YOUR_SITE_URL_OR_PROJECT_URL>" # e.g., https://yourproject.com
export OPENROUTER_SITE_NAME="<YOUR_APP_OR_PROJECT_NAME>"    # e.g., MyProject FeatureGen

# --- File Path Configurations (relative to the project root) ---
# Path to the file containing the overall project context.
export PROJECT_CONTEXT_PATH="project_context.md"

# Path to the 'repo_contents.txt' file (output of 'git dump' or similar command).
export REPO_CONTENTS_PATH="repo_contents.txt"

# Path to the file containing the list of features to implement.
export FEATURES_FILE_PATH="features_to_implement.txt"

# Path to the CLAUDE_AGENT_RULES.md file.
# Default assumes it's within the auto_feature_tool directory.
export CLAUDE_RULES_PATH="auto_feature_tool/CLAUDE_AGENT_RULES.md"

# Directory where generated implementation guides will be stored.
export GUIDES_DIR="docs/guides"

# --- Script Behavior ---
# Set to "true" to pause the script for human review after each feature is implemented by Claude.
# Set to "false" for fully autonomous operation.
export HUMAN_REVIEW="false"

# --- Claude Code Configuration ---
# Path to the claude CLI executable, if not in system PATH or if you want to specify one.
# Default is "claude", assuming it's in PATH.
# export CLAUDE_CLI_PATH="claude"

# Directory for temporary Claude slash commands (relative to project root).
# claude-code usually looks for .claude/commands in the current working directory.
export CLAUDE_TEMP_COMMANDS_DIR=".claude/commands"

# --- Sanity Checks ---
if [[ "${OPENROUTER_API_KEY}" == "YOUR_OPENROUTER_API_KEY_HERE" || -z "${OPENROUTER_API_KEY}" ]]; then
  echo "ERROR: OPENROUTER_API_KEY is not set in auto_feature_tool/config.sh. Please set it." >&2
  # exit 1 # The main script will handle exit
fi 