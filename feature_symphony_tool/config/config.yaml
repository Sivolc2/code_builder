# feature_symphony_tool/config/config.yaml
# Copy this to config.yaml and fill in your values.

# Gemini API Configuration
# Your Gemini API Key.
# IMPORTANT: It's highly recommended to set this via the GEMINI_API_KEY environment variable
# (e.g., in an .env file) instead of hardcoding it here for security.
# If gemini_api_key is null or empty, the tool will expect GEMINI_API_KEY environment variable.
gemini_api_key: null

# Gemini model to use for generating feature slice guides.
# Example: "gemini-1.5-pro-latest", "gemini-pro"
gemini_model_guide_generation: "gemini-1.5-pro-latest"

# Aider Configuration
# List of global context files to always include with Aider.
# These paths are relative to the root of the project where you run the symphony tool.
aider_global_context_files:
  - "README.md"
  # - "src/core_logic.py"
  # - "docs/architecture.md"

# Output Configuration
# Directory where the generated feature_slice_guide_*.md files will be saved.
# This path is relative to the root of the project where you run the symphony tool.
guides_output_directory: "docs/feature_guides" # Example: "project_docs/generated_guides"

# Tmux session name prefix for Aider runs
# The actual session name will be: {tmux_session_prefix}_{RUN_ID}
tmux_session_prefix: "symphony_aider"

# --- Advanced ---
# Optional: Directory within feature_symphony_tool to store logs and intermediate files for each run.
# If empty, no run-specific subdirectories are created by the tool for its own artifacts.
# Tool's internal run artifacts directory (relative to feature_symphony_tool location)
# Example: "runs" will create feature_symphony_tool/runs/RUN_ID/...
tool_run_artifacts_dir: "runs" 